/* originally from https://codepen.io/anatectureatwork/pen/VwymwoX?editors=1100 */
$items: 6;
$arcLengthPercent: calc(1 / $items / 2 * 10);
$pi: 3.14159265359;

$page-background: #fff;
$line-background: #eee;
$chart-color1: #0076d6; // .bg-blue
$chart-color2: #e66f0e; // .bg-orange
$chart-color3: #538200; // .bg-green
$chart-color4: #676cc8; // .bg-indigo
$chart-color5: #ffbe2e; // .bg-gold
$chart-color6: #e52207; // .bg-red

.graph circle.one {
  --color: #{$chart-color1};
  --value: 8;
  --max: 19;
}

.graph circle.two {
  --color: #{$chart-color2};
  --value: 10;
  --max: 20;
}

.graph circle.three {
  --color: #{$chart-color3};
  --value: 4;
  --max: 9;
}

.graph circle.four {
  --color: #{$chart-color4};
  --value: 10;
  --max: 20;
}

.graph circle.five {
  --color: #{$chart-color5};
  --value: 6;
  --max: 10;
}

.graph circle.six {
  --color: #{$chart-color6};
  --value: 7;
  --max: 20;
}

svg {
  width: 20vmin;
  height: 20vmin;
  transform: rotate(12deg);
}

.background circle {
  fill: $line-background;
  stroke: none;
}
.graph circle {
  fill: none;
  stroke: var(--color, grey);
  stroke-width: calc(50px * (var(--value, 0) / var(--max, 100)));
  // our background circle has a radius of 50px. When calculating the radius for a wedge, you start with 1/2 the background circle. This is multiplied by the value/max
  r: calc(25px * (var(--value) / var(--max)));
  /* 
   * Comprised of two parts, arc length and circumference. 
   * Arc Length: (1 / number of wedges) * 2 * π * (radius * val/max)
   * Circumference: 2 * π * (radius * val/max)
  */
  stroke-dasharray: calc(
      0.166666667 * 2 * 3.1415 * (25 * (var(--value, 0) / var(--max, 100)))
    )
    calc(2 * 3.1415 * (25 * (var(--value, 0) / var(--max, 100))));
  animation: circle 2s ease-in-out both;
}

@keyframes circle {
  0% {
    opacity: 0;
    stroke-width: 0;
  }
}

@for $i from 1 through $items {
  circle:nth-child(#{$i}) {
    //stroke-dashoffset: #{-1 * ($i - 1)};
    /**
	 * DOES NOT CURRENTLY WORK- would like to push this into SCSS so the transform is not separated from other CSS actions. It currently lives in the HTML
	 * transform: each wedge must be rotated so that they are not all stacked. The 2nd and 3rd arguments denote the x,y coordinates to use when rotating. Values of 10 10 ensure you rotate from center of the circle (as prescribed by your cx cy values).
	 */
    //transform: rotate(#{$i * 60}deg) translateX(50px) translateY(50px);
    animation-delay: #{0.2s * $i};
  }
}
